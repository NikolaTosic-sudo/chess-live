package components

import "fmt"

templ GridBoardHistory(board map[string]Square, pieces map[string]Piece, multiplier int) {
  <div id="board" hx-target="this" hx-swap="innerHTML" hx-disinherit="*" class="grid grid-cols-8 w-full h-board h-board-md relative">
    {{ i := 0}}
    for j := 0; j < len(cols) && i < len(rows); j++ {
      {{ tileSig := fmt.Sprintf("%v%v", rows[i], cols[j]) }}
      {{ tile := board[tileSig] }}
      if j == 0 {
        <span id={rows[i]} class="absolute sm:text-[8px] lg:text-[12px] left-0 z-10" style={getPosX(i, multiplier)}>{rows[i]}</span>
      }
      if i == 0 {
        <span id={cols[j]} class="absolute sm:text-[8px] lg:text-[12px] bottom-0 z-10" style={getPosY(j + 1, multiplier)}>{cols[j]}</span>
      }
      <div id={fmt.Sprintf("%v", tileSig)} hx-post="/move-to" hx-vals='{"page": "history"}' class="tile-md tile" style={genCol(tile.Color)}></div>
      if j == len(cols) - 1 {
        {{ i++ }}
        {{ j = -1 }}
      }
    }
    for k, v := range pieces {
      {{ tile := board[v.Tile] }}
      <span id={k} hx-post="/move" hx-vals='{"page": "history"}' hx-swap="outerHTML" class="tile-md tile hover:cursor-grab absolute transition-all" style={getPiecePos(tile.Coordinates)}>
        <img src={"/assets/pieces/" + v.Image + ".svg" } />
      </span>
    }
  </div>
}