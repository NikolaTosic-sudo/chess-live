package components

import "fmt"

templ StartLocalGame(board map[string]Square, pieces map[string]Piece, multiplier int, whitePlayer, blackPlayer PlayerStruct) {
<div class="flex">
<div class="w-[240px]"></div>
<div id="chess-board" hx-post="/update-multiplier" hx-vals="js:{multiplier: getMultiplier()}" hx-trigger="load"
	hx-swap="none" class="w-board w-board-md mx-auto mt-2 relative">
  <div id="timer-update" hx-get="/timer" hx-trigger="every 1s"></div>
	@Player(blackPlayer, []string{})
	<div class="grid grid-cols-8 w-full h-board h-board-md relative">
		<div id="promotion" class="absolute bottom-20"></div>
		{{ i := 0}}
		for j := 0; j < len(cols) && i < len(rows); j++ { 
			{{ tileSig :=fmt.Sprintf("%v%v", rows[i], cols[j]) }}
			{{ tile :=board[tileSig] }} 
			if j==0 {
				<span id={rows[i]}
			class="absolute sm:text-[8px] lg:text-[12px] left-0 z-10" style={getPosX(i, multiplier)}>
			{rows[i]}</span>
			}
			if i == 0 {
			<span id={cols[j]} class="absolute sm:text-[8px] lg:text-[12px] bottom-0 z-10" style={getPosY(j + 1, multiplier)}>{cols[j]}</span>
			}
			<div id={fmt.Sprintf("%v", tileSig)} hx-post="/move-to" class="tile-md tile"
				style={genCol(tile.Color)}></div>
			if j == len(cols) - 1 {
			{{ i++ }}
			{{ j = -1 }}
			}
			}
			for k, v := range pieces {
			{{ tile := board[v.Tile] }}
			<span id={k} hx-post="/move" hx-swap="outerHTML"
				class="tile-md tile hover:cursor-grab absolute transition-all"
				style={getPiecePos(tile.Coordinates)}>
				<img src={"/assets/pieces/" + v.Image + ".svg" } />
			</span>
			}
	</div>
	@Player(whitePlayer, []string{})
</div>
<div class="h-full w-[240px] mt-10 block">
  <div>
    <div>
      <button hx-get="/surrender" hx-confirm="Are you sure you want to surrender" class="bg-red-600 hover:bg-red-500 text-white font-medium py-2 px-5 rounded-md shadow-sm transition duration-200 cursor-pointer mt-8">
        Surrender
      </button>
    </div>
  </div>
    <div id="moves" class="grid grid-cols-3 text-white h-moves w-[240px] mt-8 max-h-[320px] overflow-auto"></div>
    </div>
    </div>
<script>
	const board = document.getElementById('chess-board');
	let width = board.clientWidth
	function getMultiplier() {
		if (width < 480) return 40;
		if (width < 640) return 60;
		if (width < 800) return 80;
		return 100;
	}
</script>
}
